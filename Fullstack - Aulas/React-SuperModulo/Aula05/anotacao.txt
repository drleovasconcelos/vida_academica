npm create vite@latest
y
coloca o nome do projeto
seleciona o React
seleciona o Javascript
cd nome do projeto
npm install
code .
abre o terminal de novo
npm run dev

=======================
LIMPEZA

apaga o arquivo index.css
limpa tudo de dentro do App.css (deixa vazio)
transforma o App.jsx nisso:
import "./App.css"
function App() {
  return (
    <h1>Aula 1</h1>
  )
}

export default App

e no main.jsx apaga apenas a linha 4 que é a importação do index.css que apagamos

dentro da pasta public apaga o aquivo vite.svg
dentro da pasta assets apaga o arquivo react.svg


Dracula
Material Icon
Image Preview
Color Highligth
Prettier


{
  "workbench.iconTheme": "material-icon-theme",
  "editor.fontSize": 16,
  "editor.lineHeight": 1.75,
  "editor.tabSize": 2,
  "workbench.startupEditor": "newUntitledFile",
  "editor.wordWrap": "on",
  "editor.minimap.renderCharacters": false,
  "telemetry.telemetryLevel": "off",
  "security.workspace.trust.untrustedFiles": "open",
  "breadcrumbs.filePath": "off",
  "outline.icons": false,
  "editor.formatOnSave": true,
  "html.format.wrapAttributes": "auto",
  "html.format.wrapLineLength": 0,
  "html.autoClosingTags": false,
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "[html]": {
    "editor.defaultFormatter": "vscode.html-language-features"
  },
  "editor.bracketPairColorization.enabled": false,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "explorer.compactFolders": false,
  "typescript.updateImportsOnFileMove.enabled": "always",
  "window.zoomLevel": 1,
  "explorer.confirmDragAndDrop": false,
  "workbench.colorTheme": "Dracula",
  "files.autoSave": "afterDelay"
}




https://rickandmortyapi.com/documentation

https://rickandmortyapi.com/api/character







import axios from "axios";
import "./App.css";
import { useEffect, useState } from "react";

function App() {
  const [listaPersonagens, setListaPersonagens] = useState();
  const [personagemPesquisa, setPersonagemPesquisa] = useState("");

  async function carregarPagina() {
    const { data } = await axios.get(
      "https://rickandmortyapi.com/api/character"
    );
    setListaPersonagens(data.results);
  }

  useEffect(() => {
    carregarPagina();
  }, []);

  async function filtrarPersonagem() {
    const { data } = await axios.get(
      `https://rickandmortyapi.com/api/character/?name=${personagemPesquisa}`
    );
    setListaPersonagens(data.results);
  }

  useEffect(() => {
    filtrarPersonagem();
  }, [personagemPesquisa]);

  return (
    <>
      <h1>Projeto Rick and Morty</h1>

      <input
        type="text"
        id="pesquisa"
        name="pesquisa"
        placeholder="Digite um personagem"
        className="pesquisa"
        onChange={(e) => setPersonagemPesquisa(e.target.value)}
      />

      <section className="container">
        {listaPersonagens &&
          listaPersonagens.map((element) => (
            <div className="card" key={element.id}>
              <img
                className="foto"
                src={element.image}
                alt="Foto do personagem"
              />
              <h2>Nome: {element.name}</h2>
              <p>Espécie: {element.species}</p>
              <p>Status: {element.status}</p>
              <p>Localização: {element.location.name}</p>
            </div>
          ))}
      </section>
    </>
  );
}

export default App;









* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  background-color: rgb(55, 113, 128);
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  color: white;
}
h1 {
  text-align: center;
  margin: 40px 0;
  font-size: 60px;
}

.container {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  gap: 10px;
  max-width: 90vw;
  margin: 0 auto;
}

.card {
  background-color: rgb(37, 37, 37);
  color: white;
  border-radius: 10px;
  box-shadow: 2px 2px 10px rgba(0, 0, 0, 0.498);
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  gap: 10px;
  padding: 15px;
  transition: 0.3s ease-in-out;
}
.card:hover {
  transform: scale(1.03);
}

.foto {
  max-width: 200px;
  border-radius: 10px;
}

.pesquisa {
  outline: none;
  border: 1px solid black;
  background-color: transparent;
  padding: 15px;
  font-size: 18px;
  border-radius: 10px;
  color: white;
  margin-bottom: 20px;
  width: 100%;
}
.pesquisa:hover {
  border: 1px solid rgb(241, 241, 241);
}
.pesquisa:focus {
  border: 1px solid rgb(241, 241, 241);
}
.pesquisa::placeholder {
  color: rgb(152, 152, 152);
}









AO DIGITAR ACIONA duas COISAS:
-ATUALIZAR A VARIÁVEL PARA O VALOR ATUAL
-ATIVAR A FUNÇÃO QUE FAZ A REQUISIÃO NA API





https://github.com/abelardojr0/aula5react



